<UserControl x:Class="Particular.ServiceInsight.Desktop.Saga.SagaUpdateControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Particular.ServiceInsight.Desktop.Saga"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:Particular.ServiceInsight.Desktop.Models"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Background="White"
             d:DataContext="{d:DesignInstance {x:Type local:SagaUpdate}}"
             d:DesignHeight="900"
             d:DesignWidth="900"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Images/Xaml/XamlIcons.xaml" />
                <ResourceDictionary Source="/Saga/SagaResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="PropertiesRadioButton" TargetType="RadioButton">
                <Setter Property="Background" Value="#FF448DCA" />
                <Setter Property="Foreground" Value="{StaticResource SagaBlue}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Padding" Value="4,1,0,0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#FFA3AEB9" />
                            <GradientStop Offset="0.375" Color="#FF8399A9" />
                            <GradientStop Offset="0.375" Color="#FF718597" />
                            <GradientStop Offset="1" Color="#FF617584" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <StackPanel>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed">
                                            <Storyboard />
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="contentPresenter"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 To=".55" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="FontWeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <FontWeight>Bold</FontWeight>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard />
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="InvalidUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InvalidFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <system:Boolean>True</system:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <TextBlock x:Name="contentPresenter"
                                           Margin="{TemplateBinding Padding}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Text="{TemplateBinding Content}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FailedMessageMarker" TargetType="ContentControl">
                <Setter Property="Margin" Value="7,5,5,5" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:MessageStatus.Failed}">
                        <Setter Property="Template" Value="{StaticResource msgFailureIcon}" />
                        <Setter Property="ToolTip" Value="Failed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:MessageStatus.RepeatedFailure}">
                        <Setter Property="Template" Value="{StaticResource msgRepeatedFailureIcon}" />
                        <Setter Property="ToolTip" Value="Repeated Failures" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:MessageStatus.RetryIssued}">
                        <Setter Property="Template" Value="{StaticResource msgRetriedIcon}" />
                        <Setter Property="ToolTip" Value="Retry Requested" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="MessageDataItem">
                <StackPanel x:Name="MessageDataItemPanel" Orientation="Horizontal">
                    <TextBlock FontWeight="Bold"
                               Foreground="{StaticResource SagaForeground}"
                               Text="{Binding Key}" />
                    <TextBlock Foreground="{StaticResource SagaForeground}" Text=" = " />
                    <TextBlock Foreground="{StaticResource SagaForeground}" Text="{Binding Value}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="MessageTop">
                <Grid d:DataContext="{d:DesignInstance {x:Type local:SagaMessage}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <SolidColorBrush x:Key="EndpointBackground" Color="White" />
                        <SolidColorBrush x:Key="EndpointForeground" Color="#666666" />

                        <Style x:Key="MessageEndpointText" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="9" />
                            <Setter Property="Foreground" Value="{StaticResource EndpointForeground}" />
                        </Style>
                    </Grid.Resources>

                    <StackPanel x:Name="OriginatingEndPoint"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Height="14"
                                Background="{StaticResource EndpointBackground}"
                                Orientation="Horizontal"
                                ToolTip="Sending Endpoint"
                                Visibility="{Binding ElementName=Surface,
                                                     Path=DataContext.ShowEndpoints,
                                                     Converter={StaticResource BoolToVisibilityHiddenConverter}}">
                        <ContentControl Margin="3,0,3,0" Template="{StaticResource SendingEndpoint}" />
                        <TextBlock FontSize="10px"
                                   Style="{StaticResource MessageEndpointText}"
                                   Text="{Binding OriginatingEndpoint}" />
                    </StackPanel>

                    <Border x:Name="NoEndpointsBorder"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            BorderBrush="Black"
                            BorderThickness="0">
                        <Rectangle x:Name="MessageRectangle"
                                   Width="{Binding Width,
                                                   ElementName=MessageTypeBox}"
                                   Height="45px"
                                   MinWidth="220px"
                                   Fill="{StaticResource MessageBackground}" />
                    </Border>

                    <ContentControl x:Name="FailedMessageMarker"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Style="{StaticResource FailedMessageMarker}" />

                    <ContentControl x:Name="MessageTypeIcon"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Width="20"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Template="{StaticResource CommandIcon}"
                                    ToolTip="Command"
                                    Visibility="{Binding IsTimeout,
                                                         Converter={StaticResource BoolToVisibilityConverterInverted}}" />
                    <ContentControl x:Name="TimeoutIcon"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Width="24"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Template="{StaticResource TimeoutIcon}"
                                    ToolTip="Timeout"
                                    Visibility="{Binding IsTimeout,
                                                         Converter={StaticResource BoolToVisibilityConverter}}" />

                    <StackPanel x:Name="MessageTypeBox"
                                Grid.Row="1"
                                Grid.Column="1"
                                VerticalAlignment="Center">
                        <TextBlock FontSize="14px"
                                   FontWeight="Bold"
                                   Text="{Binding MessageType}" />
                        <TextBlock FontSize="14px" Text="{Binding TimeSent}" />
                    </StackPanel>
                </Grid>

                <DataTemplate.Triggers>

                    <DataTrigger Binding="{Binding HasFailed}" Value="True">
                        <DataTrigger.Setters>
                            <Setter TargetName="MessageRectangle" Property="Fill" Value="{StaticResource FailedMessageBackground}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding HasRetried}" Value="True">
                        <DataTrigger.Setters>
                            <Setter TargetName="MessageRectangle" Property="Fill" Value="{StaticResource RetriedMessageBackground}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=Surface, Path=DataContext.ShowEndpoints}" Value="False" />
                            <Condition Binding="{Binding IsSelected}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="NoEndpointsBorder" Property="BorderThickness" Value="2" />
                        <Setter TargetName="NoEndpointsBorder" Property="Margin" Value="0 -2 0 0" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=Surface, Path=DataContext.ShowEndpoints}" Value="True" />
                            <Condition Binding="{Binding IsSelected}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="NoEndpointsBorder" Property="Margin" Value="0 -2 0 0" />
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="MessageBottom">
                <Grid d:DataContext="{d:DesignInstance {x:Type local:SagaMessage}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <SolidColorBrush x:Key="EndpointBackground" Color="White" />
                        <SolidColorBrush x:Key="EndpointForeground" Color="#666666" />

                        <Style x:Key="MessageEndpointText" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="9" />
                            <Setter Property="Foreground" Value="{StaticResource EndpointForeground}" />
                        </Style>
                    </Grid.Resources>

                    <Border x:Name="MessageDetails"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            BorderBrush="{StaticResource MessageBackground}"
                            BorderThickness="1,0,1,1"
                            Visibility="{Binding ElementName=Surface,
                                                 Path=DataContext.ShowMessageData,
                                                 Converter={StaticResource BoolToVisibilityConverter}}">
                        <StackPanel x:Name="MessageDataPanel" Visibility="{Binding ElementName=Surface, Path=DataContext.ShowMessageData, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ItemsControl x:Name="MessageData"
                                          ItemTemplate="{StaticResource MessageDataItem}"
                                          ItemsSource="{Binding Data}"
                                          Padding="4" />
                            <TextBlock x:Name="EmptyPropertyText"
                                       HorizontalAlignment="Center"
                                       Foreground="Black"
                                       Text="Empty"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Border>

                    <StackPanel x:Name="ReceivingEndPoint"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Height="14"
                                VerticalAlignment="Center"
                                Background="{StaticResource EndpointBackground}"
                                Orientation="Horizontal"
                                ToolTip="Processing Endpoint"
                                Visibility="{Binding ElementName=Surface,
                                                     Path=DataContext.ShowEndpoints,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentControl Margin="3,0,3,0" Template="{StaticResource ReceivingEndpoint}" />
                        <TextBlock FontSize="10px"
                                   Style="{StaticResource MessageEndpointText}"
                                   Text="{Binding ReceivingEndpoint}" />
                    </StackPanel>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ShowData}" Value="False">
                        <DataTrigger.Setters>
                            <Setter TargetName="EmptyPropertyText" Property="Visibility" Value="{Binding ElementName=Surface, Path=DataContext.ShowMessageData, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="Message">
                <Border x:Name="EndpointsBorder"
                        BorderBrush="Black"
                        BorderThickness="0"
                        d:DataContext="{d:DesignInstance {x:Type local:SagaMessage}}">
                    <Grid x:Name="RootGrid"
                          Focusable="True"
                          MouseLeftButtonUp="RootGrid_MouseLeftButtonUp">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0"
                                        Content="{Binding}"
                                        ContentTemplate="{StaticResource MessageTop}" />
                        <ContentControl Grid.Row="1"
                                        Content="{Binding}"
                                        ContentTemplate="{StaticResource MessageBottom}" />
                    </Grid>
                </Border>

                <DataTemplate.Triggers>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=Surface, Path=DataContext.ShowEndpoints}" Value="True" />
                            <Condition Binding="{Binding IsSelected}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="EndpointsBorder" Property="BorderThickness" Value="2" />
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="UpdatedValuesTemplate">
                <StackPanel Background="{StaticResource SagaBackground}">
                    <StackPanel Margin="0 6 0 0"
                                Orientation="Horizontal"
                                Visibility="{Binding IsValueChanged,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Width="120px"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{StaticResource SagaForeground}" Text=" =    " />
                        <TextBlock FontWeight="Bold"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding OldValue}" />
                        <TextBlock FontFamily="Symbol"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text=" ® " />
                        <TextBlock FontWeight="Bold"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding NewValue}" />
                    </StackPanel>
                    <StackPanel Margin="0 6 0 0"
                                Orientation="Horizontal"
                                Visibility="{Binding IsValueNew,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Width="120px"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding Label}"
                                   TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{StaticResource SagaForeground}" Text=" =    " />
                        <TextBlock FontWeight="Bold"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding NewValue}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="AllValuesTemplate">
                <StackPanel Background="{StaticResource SagaBackground}">
                    <ContentPresenter ContentSource="{Binding}" ContentTemplate="{StaticResource UpdatedValuesTemplate}" />
                    <StackPanel Margin="0 6 0 0"
                                Orientation="Horizontal"
                                Visibility="{Binding IsValueNotUpdated,
                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Width="120px"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{StaticResource SagaForeground}" Text=" =    " />
                        <TextBlock FontWeight="Bold"
                                   Foreground="{StaticResource SagaForeground}"
                                   Text="{Binding NewValue}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="PropertiesPanel">
                <StackPanel Margin="20 10 0 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="#B3B3B3" Text="Properties: " />
                        <RadioButton x:Name="All"
                                     Content="All"
                                     Style="{StaticResource PropertiesRadioButton}" />
                        <TextBlock Foreground="#B3B3B3" Text=" /" />
                        <RadioButton x:Name="Updated"
                                     Content="Updated"
                                     IsChecked="True"
                                     Style="{StaticResource PropertiesRadioButton}" />
                    </StackPanel>

                    <ItemsControl ItemsSource="{Binding Values}">
                        <ItemsControl.Style>
                            <Style TargetType="{x:Type ItemsControl}">
                                <Setter Property="ItemTemplate" Value="{StaticResource UpdatedValuesTemplate}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=Updated}" Value="False">
                                        <Setter Property="ItemTemplate" Value="{StaticResource AllValuesTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="TimeoutMessage">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".95*" />
                        <ColumnDefinition Width="1.1*" />
                        <ColumnDefinition Width=".95*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="1" Background="{StaticResource SagaBackground}">
                        <StackPanel Margin="10" Background="{StaticResource SagaBackground}">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl x:Name="TimeoutIcon"
                                                Margin="0 4 4 4"
                                                VerticalAlignment="Top"
                                                Template="{StaticResource SagaTimeoutIcon}" />

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>
                                        <Hyperlink Click="Hyperlink_Click"
                                                   FontSize="16px"
                                                   FontWeight="Bold"
                                                   Foreground="{StaticResource SagaBlue}">
                                            <TextBlock Text="Timeout Requested = " />
                                            <TextBlock Text="{Binding TimeoutFriendly}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Column="2">
                        <ContentPresenter x:Name="TimeoutMessage"
                                          Margin="0 65 0 0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          ContentSource="{Binding}"
                                          ContentTemplate="{StaticResource Message}" />
                        <Rectangle Grid.Column="2"
                                   Height="14px"
                                   Visibility="{Binding ElementName=Surface,
                                                        Path=DataContext.ShowEndpoints,
                                                        Converter={StaticResource BoolToVisibilityConverterInverted}}" />
                    </StackPanel>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="SagaNodePanel">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".95*" />
            <ColumnDefinition Width="1.1*" />
            <ColumnDefinition Width=".95*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ContentPresenter x:Name="InitialMessage"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Content="{Binding InitiatingMessage}"
                          ContentTemplate="{StaticResource Message}" />
        <StackPanel x:Name="Middle"
                    Grid.Column="1"
                    Background="{StaticResource SagaBackground}">
            <StackPanel Margin="10 12" Background="{StaticResource SagaBackground}">
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsSagaTimeoutMessage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ContentControl Margin="0 4 4 4"
                                    VerticalAlignment="Top"
                                    Template="{StaticResource SagaTimeoutIcon}" />

                    <TextBlock FontSize="16px"
                               FontWeight="Bold"
                               Foreground="{StaticResource SagaBlue}"
                               Text="Timeout Invoked" />
                </StackPanel>
                <Control Margin="10" Visibility="{Binding IsSagaTimeoutMessage, Converter={StaticResource BoolToVisibilityConverterInverted}}" />

                <StackPanel x:Name="StepName" Orientation="Horizontal">
                    <ContentControl Margin="0 4 4 4"
                                    VerticalAlignment="Top"
                                    Template="{StaticResource SagaInitiatedIcon}"
                                    Visibility="{Binding IsFirstNode,
                                                         Converter={StaticResource BoolToVisibilityConverter}}" />
                    <ContentControl Margin="0 4 4 4"
                                    VerticalAlignment="Top"
                                    Template="{StaticResource SagaUpdatedIcon}"
                                    Visibility="{Binding IsFirstNode,
                                                         Converter={StaticResource BoolToVisibilityConverterInverted}}" />

                    <TextBlock x:Name="StepNameBox"
                               FontSize="16px"
                               FontWeight="Bold"
                               Text="{Binding Label}" />
                    <TextBlock Margin="10 5"
                               FontSize="12px"
                               Text="{Binding StartTime}" />
                </StackPanel>

                <ContentPresenter ContentSource="{Binding}" ContentTemplate="{StaticResource PropertiesPanel}" />
            </StackPanel>
        </StackPanel>
        <ItemsControl x:Name="SagaMessages"
                      Grid.Column="2"
                      Margin="0 80 0 0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      ItemTemplate="{StaticResource Message}"
                      ItemsSource="{Binding NonTimeoutMessages}" />
        <ItemsControl x:Name="TimeoutMessages"
                      Grid.Row="1"
                      Grid.ColumnSpan="3"
                      ItemTemplate="{StaticResource TimeoutMessage}"
                      ItemsSource="{Binding TimeoutMessages}" />
    </Grid>
</UserControl>