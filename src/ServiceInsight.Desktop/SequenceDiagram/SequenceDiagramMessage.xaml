<UserControl x:Class="Particular.ServiceInsight.Desktop.SequenceDiagram.SequenceDiagramMessage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Particular.ServiceInsight.Desktop.Framework.Behaviors"
             xmlns:controls="clr-namespace:Particular.ServiceInsight.Desktop.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sequenceDiagram="clr-namespace:Particular.ServiceInsight.Desktop.SequenceDiagram"
             xmlns:valueConverters="clr-namespace:Particular.ServiceInsight.Desktop.ValueConverters"
             x:Name="Root"
             d:DataContext="{d:DesignData /SampleData/MessageInfoSampleData.xaml}"
             d:DesignHeight="600"
             d:DesignWidth="900"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="SequenceDiagramSharedResources.xaml" />
                <ResourceDictionary Source="DarkMenus.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <sequenceDiagram:EndpointPositionConverter x:Key="MiddleEndpointConverter"
                                                       ColumnWidth="{StaticResource ColumnWidth}"
                                                       Middle="True" />

            <sequenceDiagram:EndpointThicknessConverter x:Key="ToEndpointMarginConverter" ColumnWidth="{StaticResource ColumnWidth}" />

            <sequenceDiagram:EndpointThicknessConverter x:Key="MessageEndpointMarginConverter"
                                                        ColumnWidth="{StaticResource ColumnWidth}"
                                                        Middle="True"
                                                        Top="-36" />

            <sequenceDiagram:EndpointThicknessConverter x:Key="StartMessageMarginConverter"
                                                        ColumnWidth="{StaticResource ColumnWidth}"
                                                        Top="-36" />

            <valueConverters:BoolToStrokeDashArrayConverter x:Key="BoolToStrokeDashArrayConverter" StrokeDashArray="1.5" />

            <Style x:Key="MessageIconStyle" TargetType="{x:Type controls:IconControl}">
                <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsTimeout}" Value="True">
                        <Setter Property="Data" Value="{StaticResource TimeoutGeometry}" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsTimeout}" Value="False" />
                            <Condition Binding="{Binding IsPublished}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Data" Value="{StaticResource EventGeometry}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsTimeout}" Value="False" />
                            <Condition Binding="{Binding IsPublished}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SagaIconStyle" TargetType="{x:Type controls:IconControl}">
                <Setter Property="Data" Value="{StaticResource RightArrow}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSagaInitiated}" Value="True">
                        <Setter Property="Data" Value="{StaticResource SagaTriggerGeometry}" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSagaInitiated}" Value="False" />
                            <Condition Binding="{Binding IsSagaCompleted}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Data" Value="{StaticResource RightArrow}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSagaInitiated}" Value="False" />
                            <Condition Binding="{Binding IsSagaCompleted}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Data" Value="{StaticResource SagaCompletedGeometry}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UnderlineTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextDecorations" Value="Underline" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MessagePopupButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FailedPopupButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Style>
        <Style TargetType="{x:Type sequenceDiagram:SequenceDiagramMessage}">

            <Setter Property="Line" Value="Black" />
            <Setter Property="EndpointBox" Value="{StaticResource Grey60Brush}" />
            <Setter Property="MessageBackground" Value="Transparent" />
            <Setter Property="MessageForeground" Value="{StaticResource Grey40Brush}" />
            <Setter Property="SagaBackground" Value="{StaticResource Grey40Brush}" />
            <Setter Property="SagaForeground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Line" Value="{StaticResource HiliteDarkBrush}" />
                    <Setter Property="EndpointBox" Value="{StaticResource HiliteLightBrush}" />
                </Trigger>

                <DataTrigger Binding="{Binding Selected}" Value="True">
                    <Setter Property="MessageBackground" Value="{StaticResource HiliteDarkBrush}" />
                    <Setter Property="MessageForeground" Value="White" />
                    <Setter Property="SagaBackground" Value="White" />
                    <Setter Property="SagaForeground" Value="{StaticResource HiliteDarkBrush}" />
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Selected}" Value="False" />
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="MessageBackground" Value="Transparent" />
                    <Setter Property="MessageForeground" Value="{StaticResource HiliteDarkBrush}" />
                    <Setter Property="SagaBackground" Value="{StaticResource HiliteDarkBrush}" />
                    <Setter Property="SagaForeground" Value="White" />
                </MultiDataTrigger>

            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Grid>

        <!--  Padding for endpoints  -->
        <ItemsControl x:Name="EndpointPaddings"
                      ItemsSource="{Binding Endpoints}"
                      Style="{StaticResource HorizontalItemsControlStyle}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Width="{StaticResource ColumnWidth}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--  Horizontal line  -->
        <Line x:Name="HorizontalLine"
              Fill="{Binding Line,
                             ElementName=Root}"
              Stroke="{Binding Line,
                               ElementName=Root}"
              StrokeDashArray="{Binding IsPublished,
                                        Converter={StaticResource BoolToStrokeDashArrayConverter}}"
              StrokeEndLineCap="Square"
              StrokeThickness="4"
              X1="{Binding MinEndpointIndex,
                           Converter={StaticResource MiddleEndpointConverter}}"
              X2="{Binding MaxEndpointIndex,
                           Converter={StaticResource MiddleEndpointConverter}}"
              Y1="0"
              Y2="0" />

        <!--  Start message arrow  -->
        <Grid x:Name="StartMessageArrow"
              Width="{StaticResource ColumnWidth}"
              Height="72"
              Margin="{Binding SendingEndpointIndex,
                               Converter={StaticResource StartMessageMarginConverter}}"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Visibility="{Binding IsFirst,
                                   Converter={StaticResource BoolToVisibilityConverter}}">
            <Rectangle Width="25"
                       Height="25"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Fill="{Binding Line,
                                      ElementName=Root}" />
            <Path Width="10"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource RightArrow}"
                  Fill="White"
                  Stretch="Fill" />
        </Grid>

        <!--  Message Popup  -->
        <Border x:Name="MessagePopup"
                Width="{StaticResource ColumnWidth}"
                Height="72"
                Margin="{Binding MessagePopupIndex,
                                 Converter={StaticResource MessageEndpointMarginConverter}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="Transparent">

            <Grid x:Name="PopupBorder"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <Border Height="29"
                        VerticalAlignment="Top"
                        Background="{Binding MessageBackground,
                                             ElementName=Root}" />
                <Border Height="27"
                        VerticalAlignment="Bottom"
                        Background="{Binding MessageBackground,
                                             ElementName=Root}"
                        Visibility="{Binding SagaName,
                                             Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}" />

                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="22" />
                        <RowDefinition Height="22" />
                    </Grid.RowDefinitions>

                    <!--  Top Line  -->
                    <Button x:Name="TopLine"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Style="{StaticResource MessagePopupButtonStyle}">
                        <i:Interaction.Behaviors>
                            <behaviors:DropDownButtonBehavior />
                        </i:Interaction.Behaviors>

                        <Button.ContextMenu>
                            <ContextMenu Style="{StaticResource DarkContextMenuStyle}">
                                <MenuItem Header="Retry message"
                                          Style="{StaticResource DarkMenuItemStyle}"
                                          CommandParameter="{Binding Message}"
                                          Command="{Binding RetryMessageCommand}" />
                                <MenuItem Header="Copy conversation ID"
                                          Style="{StaticResource DarkMenuItemStyle}"
                                          CommandParameter="{Binding Message}"
                                          Command="{Binding CopyConversationIDCommand}" />
                                <MenuItem Header="Copy message URI"
                                          Style="{StaticResource DarkMenuItemStyle}"
                                          CommandParameter="{Binding Message}"
                                          Command="{Binding CopyMessageURICommand}" />
                                <MenuItem Header="Search by message ID"
                                          Style="{StaticResource DarkMenuItemStyle}"
                                          CommandParameter="{Binding Message}"
                                          Command="{Binding SearchByMessageIDCommand}" />
                            </ContextMenu>
                        </Button.ContextMenu>

                        <StackPanel Orientation="Horizontal">

                            <controls:IconControl x:Name="MessageTypeIcon"
                                                  Width="16"
                                                  Height="16"
                                                  Margin="2 0"
                                                  Foreground="{Binding MessageForeground,
                                                                       ElementName=Root}"
                                                  Style="{StaticResource MessageIconStyle}" />

                            <TextBlock Padding="5 0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{Binding MessageForeground,
                                                            ElementName=Root}"
                                       Style="{StaticResource UnderlineTextBlockStyle}"
                                       Text="{Binding Name}" />

                            <Path Width="4"
                                  Height="4"
                                  Margin="2,0,2,3"
                                  VerticalAlignment="Bottom"
                                  Data="{StaticResource DownArrow}"
                                  Fill="{Binding MessageForeground,
                                                 ElementName=Root}"
                                  Stretch="Fill" />

                        </StackPanel>

                    </Button>

                    <!--  Bottom Line  -->
                    <StackPanel x:Name="BottomLine"
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Orientation="Horizontal"
                                Visibility="{Binding SagaName,
                                                     Converter={StaticResource StringEmptyOrNullToVisibilityConverter}}">

                        <Grid Margin="0,0,1,0">
                            <Rectangle Width="18"
                                       Height="18"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Fill="{Binding SagaBackground,
                                                      ElementName=Root}" />
                            <controls:IconControl x:Name="SagaTypeIcon"
                                                  Width="9"
                                                  Height="9"
                                                  Foreground="{Binding SagaForeground,
                                                                       ElementName=Root}"
                                                  Style="{StaticResource SagaIconStyle}" />
                        </Grid>

                        <TextBlock Height="18"
                                   Padding="5 0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Background="{Binding SagaBackground,
                                                        ElementName=Root}"
                                   Foreground="{Binding SagaForeground,
                                                        ElementName=Root}"
                                   Style="{StaticResource UnderlineTextBlockStyle}"
                                   Text="{Binding SagaName}" />

                    </StackPanel>
                </Grid>
            </Grid>
        </Border>

        <!--  Vertical arrow for each to endpoint  -->
        <StackPanel Width="{StaticResource ColumnWidth}"
                    Margin="{Binding ReceivingEndpointIndex,
                                     Converter={StaticResource ToEndpointMarginConverter}}"
                    HorizontalAlignment="Left">
            <!--  Line  -->
            <Line Margin="2,0,0,0"
                  HorizontalAlignment="Center"
                  Fill="{Binding Line,
                                 ElementName=Root}"
                  Stroke="{Binding Line,
                                   ElementName=Root}"
                  StrokeDashArray="{Binding IsPublished,
                                            Converter={StaticResource BoolToStrokeDashArrayConverter}}"
                  StrokeEndLineCap="Square"
                  StrokeThickness="4"
                  X1="0"
                  X2="0"
                  Y1="0"
                  Y2="25" />
            <!--  Arrow  -->
            <Path Width="14"
                  Height="11"
                  HorizontalAlignment="Center"
                  Data="{StaticResource DownArrow}"
                  Fill="{Binding Line,
                                 ElementName=Root}"
                  Stretch="Fill" />
            <!--  Grey box  -->
            <Rectangle Width="14"
                       Height="36"
                       HorizontalAlignment="Center"
                       Fill="{Binding EndpointBox,
                                      ElementName=Root}"
                       Visibility="{Binding IsFailed,
                                            Converter={StaticResource BoolToVisibilityConverterInverted}}">
                <Rectangle.ToolTip>
                    <ToolTip Width="{StaticResource ColumnWidth}"
                             HorizontalOffset="{StaticResource HalfColumnWidth}"
                             OverridesDefaultStyle="True"
                             Placement="Center">
                        <ToolTip.Template>
                            <ControlTemplate TargetType="{x:Type ToolTip}">
                                <Grid Margin="8,0,16,0"
                                      Background="Transparent"
                                      SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Path Width="8"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource LeftArrow}"
                                          Fill="{StaticResource Grey20Brush}"
                                          Stretch="Fill" />
                                    <Border Grid.Column="1" Background="{StaticResource Grey20Brush}">
                                        <ContentPresenter Margin="8"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ToolTip.Template>

                        <UniformGrid Columns="2" Rows="3">
                            <UniformGrid.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
                                    <Setter Property="Margin" Value="4" />
                                </Style>
                            </UniformGrid.Resources>

                            <TextBlock FontWeight="Bold" Text="Critical time" />
                            <TextBlock Text="{Binding CriticalTime, Converter={StaticResource TimeSpanHumanizedConverter}}" />
                            <TextBlock FontWeight="Bold" Text="Delivery time" />
                            <TextBlock Text="{Binding DeliveryTime, Converter={StaticResource TimeSpanHumanizedConverter}}" />
                            <TextBlock FontWeight="Bold" Text="Processing time" />
                            <TextBlock Text="{Binding ProcessingTime, Converter={StaticResource TimeSpanHumanizedConverter}}" />
                        </UniformGrid>
                    </ToolTip>
                </Rectangle.ToolTip>
            </Rectangle>
            <!--  Error box  -->
            <ToggleButton x:Name="FailedButton"
                          Height="36"
                          HorizontalAlignment="Center"
                          Style="{StaticResource FailedPopupButtonStyle}">
                <Grid Height="36"
                      HorizontalAlignment="Center"
                      Background="Red"
                      Visibility="{Binding IsFailed,
                                           Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Path Width="16"
                          Height="16"
                          Margin="6,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource FailedGeometry}"
                          Fill="White"
                          Stretch="Fill" />

                    <TextBlock Grid.Column="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               Foreground="White"
                               Text="Processing failed" />

                    <Path Grid.Column="2"
                          Width="4"
                          Height="4"
                          Margin="6,6,6,0"
                          VerticalAlignment="Center"
                          Data="{StaticResource DownArrow}"
                          Fill="White"
                          Stretch="Fill" />
                </Grid>
            </ToggleButton>
            <Popup x:Name="FailedMessagePopup"
                   HorizontalAlignment="Center"
                   IsOpen="{Binding IsChecked,
                                    ElementName=FailedButton}"
                   StaysOpen="False">
                <Border MaxWidth="455" Background="Black">
                    <Grid Margin="0,6,6,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.ColumnSpan="2"
                                    Margin="6,0,6,6"
                                    Orientation="Horizontal">
                            <controls:IconControl x:Name="FailedMessageTypeIcon"
                                                  Width="16"
                                                  Height="16"
                                                  Margin="2 0"
                                                  Foreground="{StaticResource Grey60Brush}"
                                                  Style="{StaticResource MessageIconStyle}" />

                            <TextBlock Padding="5 0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Text="{Binding Name}" />
                        </StackPanel>

                        <Border Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource Grey20Brush}" />

                        <StackPanel Grid.Row="1" Margin="0,1,0,0">
                            <MenuItem Click="CloseFailedMessagePopup"
                                      Header="Retry message"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      CommandParameter="{Binding Message}"
                                      Command="{Binding RetryMessageCommand}" />
                            <MenuItem Click="CloseFailedMessagePopup"
                                      Header="Copy conversation ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      CommandParameter="{Binding Message}"
                                      Command="{Binding CopyConversationIDCommand}" />
                            <MenuItem Click="CloseFailedMessagePopup"
                                      Header="Copy message URL"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      CommandParameter="{Binding Message}"
                                      Command="{Binding CopyMessageURICommand}" />
                            <MenuItem Click="CloseFailedMessagePopup"
                                      Header="Search by message ID"
                                      Style="{StaticResource DarkMenuItemStyle}"
                                      CommandParameter="{Binding Message}"
                                      Command="{Binding SearchByMessageIDCommand}" />
                        </StackPanel>

                        <StackPanel Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="6">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Rectangle Width="4"
                                               Height="12"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Fill="White" />
                                    <Path Width="16"
                                          Height="16"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource FailedGeometry}"
                                          Fill="Red"
                                          Stretch="Fill" />
                                </Grid>

                                <TextBlock Margin="6,0"
                                           FontWeight="Bold"
                                           Foreground="Red"
                                           Text="{Binding ExceptionType}" />
                            </StackPanel>

                            <TextBlock Margin="0,6,0,0"
                                       Foreground="{StaticResource Grey60Brush}"
                                       Text="{Binding ExceptionMessage}"
                                       TextWrapping="Wrap" />
                        </StackPanel>

                    </Grid>
                </Border>
            </Popup>

        </StackPanel>

    </Grid>
</UserControl>